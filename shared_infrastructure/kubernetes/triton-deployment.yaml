apiVersion: apps/v1
kind: Deployment
metadata:
  name: triton-inference-server
  namespace: optimized-ai-system
  labels:
    app: triton-inference-server
    component: inference
    version: v1.0.0
spec:
  replicas: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: triton-inference-server
  template:
    metadata:
      labels:
        app: triton-inference-server
        component: inference
        version: v1.0.0
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8002"
        prometheus.io/path: "/metrics"
    spec:
      nodeSelector:
        accelerator: nvidia-tesla-v100
      tolerations:
      - key: nvidia.com/gpu
        operator: Exists
        effect: NoSchedule
      containers:
      - name: triton-server
        image: nvcr.io/nvidia/tritonserver:24.01-py3
        ports:
        - name: http
          containerPort: 8000
          protocol: TCP
        - name: grpc
          containerPort: 8001
          protocol: TCP
        - name: metrics
          containerPort: 8002
          protocol: TCP
        env:
        - name: CUDA_VISIBLE_DEVICES
          value: "0"
        - name: TRITON_MODEL_REPOSITORY
          value: "/models"
        resources:
          requests:
            nvidia.com/gpu: 1
            memory: "8Gi"
            cpu: "4"
          limits:
            nvidia.com/gpu: 1
            memory: "16Gi"
            cpu: "8"
        volumeMounts:
        - name: model-repository
          mountPath: /models
          readOnly: true
        - name: triton-config
          mountPath: /opt/tritonserver/config
          readOnly: true
        command:
        - tritonserver
        args:
        - --model-repository=/models
        - --strict-model-config=false
        - --log-verbose=1
        - --http-port=8000
        - --grpc-port=8001
        - --metrics-port=8002
        - --allow-http=true
        - --allow-grpc=true
        - --allow-metrics=true
        - --backend-config=python,shm-default-byte-size=134217728
        - --model-control-mode=explicit
        - --load-model=*
        livenessProbe:
          httpGet:
            path: /v2/health/live
            port: 8000
          initialDelaySeconds: 60
          periodSeconds: 30
          timeoutSeconds: 10
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /v2/health/ready
            port: 8000
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        startupProbe:
          httpGet:
            path: /v2/health/ready
            port: 8000
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 12
      volumes:
      - name: model-repository
        persistentVolumeClaim:
          claimName: triton-models-pvc
      - name: triton-config
        configMap:
          name: triton-config
      restartPolicy: Always
      terminationGracePeriodSeconds: 60

---
apiVersion: v1
kind: Service
metadata:
  name: triton-inference-service
  namespace: optimized-ai-system
  labels:
    app: triton-inference-server
    component: inference
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "8002"
    prometheus.io/path: "/metrics"
spec:
  type: ClusterIP
  ports:
  - name: http
    port: 8000
    targetPort: 8000
    protocol: TCP
  - name: grpc
    port: 8001
    targetPort: 8001
    protocol: TCP
  - name: metrics
    port: 8002
    targetPort: 8002
    protocol: TCP
  selector:
    app: triton-inference-server

---
apiVersion: v1
kind: Service
metadata:
  name: triton-inference-headless
  namespace: optimized-ai-system
  labels:
    app: triton-inference-server
    component: inference
spec:
  type: ClusterIP
  clusterIP: None
  ports:
  - name: http
    port: 8000
    targetPort: 8000
  - name: grpc
    port: 8001
    targetPort: 8001
  selector:
    app: triton-inference-server

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: triton-config
  namespace: optimized-ai-system
data:
  config.pbtxt: |
    # Global Triton configuration
    backend_config {
      name: "python"
      setting {
        key: "shm-default-byte-size"
        value: "134217728"
      }
      setting {
        key: "shm-growth-byte-size"
        value: "67108864"
      }
    }
    
    # Model configuration template
    model_config_template {
      name: "default_template"
      platform: "python"
      max_batch_size: 32
      dynamic_batching {
        max_queue_delay_microseconds: 10000
        default_queue_policy {
          timeout_action: REJECT
          default_timeout_microseconds: 30000000
          allow_timeout_override: true
          max_queue_size: 1000
        }
      }
      instance_group [
        {
          count: 2
          kind: KIND_GPU
          gpus: [0]
        }
      ]
      optimization {
        execution_accelerators {
          gpu_execution_accelerator : [ {
            name : "tensorrt"
            parameters { key: "precision_mode" value: "FP16" }
            parameters { key: "max_workspace_size_bytes" value: "1073741824" }
          }]
        }
      }
    }

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: triton-models-pvc
  namespace: optimized-ai-system
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 100Gi
  storageClassName: fast-ssd

---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: triton-hpa
  namespace: optimized-ai-system
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: triton-inference-server
  minReplicas: 3
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
  - type: Pods
    pods:
      metric:
        name: triton_inference_queue_size
      target:
        type: AverageValue
        averageValue: "50"
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
      - type: Percent
        value: 10
        periodSeconds: 60
    scaleUp:
      stabilizationWindowSeconds: 60
      policies:
      - type: Percent
        value: 50
        periodSeconds: 60

---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: triton-pdb
  namespace: optimized-ai-system
spec:
  minAvailable: 2
  selector:
    matchLabels:
      app: triton-inference-server

