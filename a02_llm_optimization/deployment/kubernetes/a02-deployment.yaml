apiVersion: apps/v1
kind: Deployment
metadata:
  name: a02-llm-optimization
  namespace: optimized-ai-system
  labels:
    app: a02-llm-optimization
    component: inference
    version: v1.0.0
spec:
  replicas: 2
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: a02-llm-optimization
  template:
    metadata:
      labels:
        app: a02-llm-optimization
        component: inference
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8000"
        prometheus.io/path: "/metrics"
    spec:
      nodeSelector:
        accelerator: nvidia-tesla-v100  # Adjust based on available GPUs
      tolerations:
      - key: nvidia.com/gpu
        operator: Exists
        effect: NoSchedule
      containers:
      - name: a02-llm-service
        image: a02-llm-optimization:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 8000
          name: http
          protocol: TCP
        env:
        - name: CUDA_VISIBLE_DEVICES
          value: "0"
        - name: MODEL_PATH
          value: "/app/models/fine_tuned_model.gguf"
        - name: GPU_LAYERS
          value: "20"
        - name: CTX_SIZE
          value: "2048"
        - name: BATCH_SIZE
          value: "512"
        - name: HOST
          value: "0.0.0.0"
        - name: PORT
          value: "8000"
        - name: LOG_LEVEL
          value: "INFO"
        - name: MAX_CONCURRENT_REQUESTS
          value: "4"
        resources:
          requests:
            nvidia.com/gpu: 1
            memory: "4Gi"
            cpu: "2"
          limits:
            nvidia.com/gpu: 1
            memory: "8Gi"
            cpu: "4"
        volumeMounts:
        - name: model-storage
          mountPath: /app/models
          readOnly: true
        - name: config-volume
          mountPath: /app/configs
          readOnly: true
        - name: results-storage
          mountPath: /app/results
        livenessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 60
          periodSeconds: 30
          timeoutSeconds: 10
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        startupProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 12  # Allow 2 minutes for startup
      volumes:
      - name: model-storage
        persistentVolumeClaim:
          claimName: a02-model-pvc
      - name: config-volume
        configMap:
          name: a02-config
      - name: results-storage
        persistentVolumeClaim:
          claimName: a02-results-pvc
      restartPolicy: Always
      terminationGracePeriodSeconds: 30

---
apiVersion: v1
kind: Service
metadata:
  name: a02-llm-service
  namespace: optimized-ai-system
  labels:
    app: a02-llm-optimization
    component: inference
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "8000"
    prometheus.io/path: "/metrics"
spec:
  type: ClusterIP
  ports:
  - port: 8000
    targetPort: 8000
    protocol: TCP
    name: http
  selector:
    app: a02-llm-optimization

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: a02-config
  namespace: optimized-ai-system
data:
  unsloth_config.yaml: |
    model:
      name: "unsloth/DeepSeek-R1-Distill-Llama-8B"
      max_seq_length: 2048
      load_in_4bit: true
      load_in_8bit: false

    lora:
      r: 16
      alpha: 16
      dropout: 0.0
      bias: "none"
      use_gradient_checkpointing: "unsloth"
      random_state: 3407
      use_rslora: false

    training:
      per_device_train_batch_size: 2
      gradient_accumulation_steps: 4
      warmup_steps: 5
      max_steps: 60
      learning_rate: 2e-4
      fp16: false
      bf16: true
      logging_steps: 1
      optim: "adamw_8bit"
      weight_decay: 0.01
      lr_scheduler_type: "linear"
      seed: 3407
      dataloader_num_workers: 0
      gradient_checkpointing: true

    grpo:
      enabled: true
      beta: 0.1
      gamma: 0.99
      group_size: 4
      temperature: 1.0

    hardware:
      gpu_memory_gb: 4
      cpu_cores: 4
      ram_gb: 8

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: a02-model-pvc
  namespace: optimized-ai-system
spec:
  accessModes:
    - ReadOnlyMany
  resources:
    requests:
      storage: 10Gi
  storageClassName: fast-ssd

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: a02-results-pvc
  namespace: optimized-ai-system
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 5Gi
  storageClassName: standard

---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: a02-hpa
  namespace: optimized-ai-system
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: a02-llm-optimization
  minReplicas: 1
  maxReplicas: 5
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
  - type: Pods
    pods:
      metric:
        name: nvidia_gpu_utilization_gpu_percent
      target:
        type: AverageValue
        averageValue: "80"
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
      - type: Percent
        value: 50
        periodSeconds: 60
    scaleUp:
      stabilizationWindowSeconds: 60
      policies:
      - type: Percent
        value: 100
        periodSeconds: 60

---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: a02-pdb
  namespace: optimized-ai-system
spec:
  minAvailable: 1
  selector:
    matchLabels:
      app: a02-llm-optimization

